@import url('../css/fonts.css');
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700;800;900&display=swap');

/* *{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Poppins", sans-serif;
} */
/* - Giá trị 1rem bằng với font-size của phần tử gốc (thường là thẻ <html>) trong tài liệu HTML.
- Giá trị của một phần tử sử dụng "rem" sẽ được tính dựa trên font-size của phần tử gốc.

Ví dụ, nếu font-size của thẻ <html> được đặt là 16px, thì 1rem sẽ tương đương với 16px. Nếu bạn muốn một phần tử có kích thước là 20px, bạn có thể gán giá trị là 1.25rem, vì 1.25rem nhân với 16px sẽ bằng 20px. Nếu bạn muốn thay đổi kích thước của toàn bộ trang web chỉ cần thay giá trị font-size của phần tử gốc (<html>) và tất cả các phần tử "rem" khác sẽ thay đổi tỷ lệ. */
html, body{
    margin: 0%;
    box-sizing: border-box; 
    /* kích thước của phần tử sẽ bao gồm các giá trị của border và padding, không tính đến margin. Điều này có nghĩa là khi bạn đặt một chiều rộng hoặc chiều cao cho phần tử, nó sẽ bao gồm luôn độ dày của border và khoảng trắng padding, không cần phải tính toán thêm. */
    overflow-x: hidden;
    /* nội dung bên ngoài kích thước phần tử sẽ bị ẩn đi và không hiển thị theo chiều ngang của phần tử cha. */
    /* animation: change 20s infinite; */
}

:root{

    /*      Theme colors        */
    --text-gray: #3f4954;
    --text-light : #686666da;
    --bg-color: #0f0f0f;
    --white: #ffffff;
    --midnight: #104f55;

    /* gradient color   */
    --sky: linear-gradient(120deg, #a1c4fd 0%, #c2e9fb 100%);

    /*      theme font-family   */
    --Abel: 'Abel', cursive;
    --Anton: 'Anton', cursive;
    --Josefin : 'Josefin', cursive;
    --Lexend: 'Lexend', cursive;
    --Livvic : 'Livvic', cursive;
}


/* ---------------- Global Classes ---------------*/

a{
    text-decoration: none;
    /* loại bỏ hoặc tắt các hiệu ứng trang trí văn bản như gạch chân (underline) hoặc gạch ngang (line-through).  */
    color: var(--text-gray);
}

.flex-row{
    /* xác định rằng phần tử sẽ sử dụng mô hình Flexbox, một cách sắp xếp và căn chỉnh linh hoạt cho các phần tử con bên trong. */
    display: flex;
    /* xác định rằng các phần tử con bên trong sẽ được xếp chồng theo chiều ngang, từ trái sang phải. */
    flex-direction: row;    
    /* xác định rằng nếu các phần tử con bên trong vượt quá kích thước của phần tử cha, chúng sẽ được ngắt dòng xuống dưới. */
    flex-wrap: wrap;
    
}

ul{
    list-style-type: none;/* loại bỏ dấu đầu dòng trong danh sách */
    
}

h1{
    font-family: var(--Lexend);
    font-size: 3rem;
}

h2{
    font-family: var(--Lexend);
}

h3{
    font-family: var(--Abel);
    font-size: 2.1rem;
}
/* nav .nav{
    width: 100%;
} */
button.btn{
    border: none;
    border-radius: 2rem;
    padding: 1rem 3rem;
    font-size: 1.5rem;
    font-family: var(--Livvic);
    cursor: pointer;
    /* con trỏ chuột sẽ được thay đổi thành một chiếc mũi tên chỏ tay (hình dạng mũi tên khi bạn di chuột qua một liên kết hoặc một vùng có thể tương tác khác trên trang web). */
}
/* span{
    front-family:var(--Abel);
} */
.nav{
    background: white;
    padding: 0 0rem;
    height: 52rem;
    min-height: 40vh;
    /* là thuộc tính giúp đặt giá trị tối thiểu cho chiều cao của phần tử. Trong trường hợp này, nó được đặt là 10% của chiều cao của viewport. */
    overflow: hidden;
    /* chỉ định cách xử lý khi nội dung của phần tử vượt quá kích thước được cho phép. Giá trị "hidden" trong trường hợp này sẽ giấu những phần vượt quá phần tử cha. */
    transition: height 1s ease-in-out;
    /* ease-in-out tiến trình chuyển đổi diễn ra theo một mô hình tăng tốc ban đầu, sau đó chuyển sang chậm lại khi kết thúc */
    /* chỉ định cách xử lý khi nội dung của phần tử vượt quá kích thước được cho phép. Giá trị "hidden" trong trường hợp này sẽ giấu những phần vượt quá phần tử cha. */
}

.nav .nav-menu{    
    display: flex;
    justify-content: space-between;
    /* các thành phần sẽ được canh chỉnh sao cho có khoảng cách ngang đồng đều giữa chúng. Thêm vào đó, thành phần đầu tiên sẽ được đặt ở đầu container, và thành phần cuối cùng sẽ được đặt ở cuối container. */
}
.nav .nav-menu .nav-items .nav-link .sub-menu-1 {
    display: none;
}
.nav .nav-menu .nav-items .nav-link .sub-menu-1 .sub-menu-2 {
    display: none;
}
.nav .toggle-collapse{
    /* phần tử sẽ được đặt ở vị trí cụ thể trên trang, không phụ thuộc vào bất kỳ phần tử nào khác. */
    position: absolute;
    /* phần tử sẽ được đặt ở vị trí bên trên cùng của phần tử cha của nó. Giá trị "0%" chính là từ vị trí bên trên cùng của phần tử cha tính theo phần trăm. */
    top: 0%;
    /* phần tử sẽ chiếm 90% chiều rộng của phần tử cha của nó.  */
    width: 90%;
    cursor: pointer;
    display: none;
}

.nav .toggle-collapse .toggle-icons{
    display: flex;
    /* đẩy tất cả các phần tử con về phía cuối cùng của container và căn chỉnh chúng theo chiều ngang. Điều này có nghĩa là phần tử cuối cùng sẽ nằm ở bên phải và các phần tử trước đó sẽ nằm bên trái của nó. */
    justify-content: flex-end;
    padding: 1.7rem 0;
}

.nav .toggle-collapse .toggle-icons i{
    font-size: 1.4rem;
    color: var(--text-gray);
}

.collapse{
    height: 30rem;
}

.nav .nav-items{
    display: flex;
    margin: 0;
}
.nav-items li{
    position: relative;
  }
  
.nav .nav-items .nav-link{
    padding: 1.6rem 1rem;
    /* được sử dụng để xác định vị trí tự nhiên của một phần tử trong luồng của tài liệu, theo quan hệ với vị trí ban đầu của nó. Khi một phần tử được thiết lập với `position: relative;`, nó sẽ được dịch chuyển dựa trên các thuộc tính `top`, `right`, `bottom`, và `left`. */
    position: relative;
    font-family: var(--Abel);
    font-size: 1.1rem;
}

.nav .nav-items .nav-link:hover{
    background-color: var(--midnight);
}

.nav .nav-items .nav-link:hover .sub-menu-1{
    display:block;
    position: absolute;
    background-color: var(--midnight);
    /* display: none; */
    z-index: 9999;
    margin-top: 1rem;
    margin-left: -1rem;
    /* background: transparent;  */
}
.nav .nav-menu .nav-items .nav-link .sub-menu-1 .hover-me:hover .sub-menu-2{
    display:block;
    position: absolute;
    background-color: var(--midnight);
    /* display: none; */
    z-index: 9999;
    margin-top: 1rem;
    margin-left: -1rem;
}
.fa-angle-right{
    float: right;
}
.nav .nav-items .nav-link:hover .sub-menu-1 ul{
    display:block;
    margin: 0; /* Thay đổi giá trị margin thành 0 */
    background: var(--midnight); /* Thêm thuộc tính background */
}
.nav .nav-items .nav-link:hover .sub-menu-1 .hover-me:hover .sub-menu-2ul{
    display:block;
    margin: 0; /* Thay đổi giá trị margin thành 0 */
    background: var(--midnight); /* Thêm thuộc tính background */
}
.nav .nav-items .nav-link:hover .sub-menu-1 .hover-me:hover .sub-menu-2ul li{
    width: 150px;
    padding: 10px;
    border-bottom: 1px dotted #fff;
    background: transparent;
    border-radius: 0;
    text-align: left;

}
.nav .nav-items .nav-link:hover .sub-menu-1 ul li{
    width: 150px;
    padding: 10px;
    border-bottom: 1px dotted #fff;
    background: transparent;
    border-radius: 0;
    text-align: left;

}
.nav .nav-items .nav-link:hover .sub-menu-1 .hover-me:hover .sub-menu-2 ul li:last-child {
    border-bottom: none;
}
.nav .nav-items .nav-link:hover .sub-menu-1 ul li:last-child {
    border-bottom: none;
}
.nav .nav-items .nav-link:hover .sub-menu-1 ul li a:hover {
    color: var(--sky);
}

.nav .nav-items .nav-link:hover a{
    color: var(--white);
}
.nav .search .btn:hover {
    background: transparent;
    border: 1px solid var(--midnight);
    color: var(--Abel);
}

.nav .nav-brand a{
    font-size: 1.6rem;
    padding: 1rem 1rem;
    /* nó sẽ được hiển thị trên một dòng riêng biệt và mở rộng trên toàn bộ chiều ngang của phần tử cha, chiếm hết khả năng ngang của vùng chứa. */
    display: block;
    font-family: var(--Lexend);
    font-size: 1.6rem;
}
.nav .search{
    padding: 1.6rem 1rem;
     width: 15rem;
    float: left; 

}
.nav .srch{
    padding: 0.5rem 1rem;
    font-family: var(--Abel);
    width: 10rem;
    height: 2rem; 
    background: transparent;
    border: 2px solid var(--midnight);
    margin-right: 2rem;
    color: var(--Abel);;
    /* border-right: none; */
    font-size: 0.8rem;
    float: left;
    border-radius: 0.5;
    /* padding: 10px;
    border-bottom-left-radius: 5px;
    border-top-left-radius: 5px; */
} 
.nav .search .btn{
    /* width: 5rem;
    height: 2rem; */
    padding: 0.5rem 0.5rem;
    background:var(--sky);
    border: 1px solid var(--bg-color);
    /* margin-top: 13px; */
    color: var(--Abel);
    /* border: none; */
    border-radius: 0.3rem;
    font-size: 0.8rem;
    font-family:var(--Abel);
    cursor: pointer;
}
.nav .home{
    position: relative;
    width: 100%;
    min-height: 100hv;
    display:flex;
    justify-content: center;
    flex-direction: column;
    background: #2696E9;
} 
.nav .home::before{

    z-index: 77;
    content: "";
    position: relative;
    background: #fff;
    width: 100%;
    height: 100%;
    top:0;
    left: 0;
}

.nav .home video{
    z-index: 000;
    position:absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
}
 .nav .home .content{
    z-index: 888;
    color: #fff;
    width: 70%;
    margin-top: 12rem;
    margin-left: 7rem;
    /* display: none; */
}

.nav .home .content .active{
    display: block;
}

.nav .home .content h1{
    font-size:5rem;
    font-weight: 1500;
    text-transform: uppercase;
    letter-spacing: 0.5rem;
    line-height: 4rem;
    margin-bottom: 2rem;
}

.nav .home .content h1 span{
    font-size: 2.5rem;
    font-weight: 600;
}

.nav .home .content p{
    margin-bottom:4rem;
}

.nav .home .content a{
    background: #fff;
    padding: 1rem 1rem;
    color: #1680AC;
    font-size:2rem;
    font-weight:500;
    text-decoration: none;
    border-radius: 0.5rem;
}  
 /* .nav .home .slider-navigation{
    z-index: 888;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center; 
     transform: translateY(2rem);  
    margin-bottom: 1rem; 
    
    
}
.nav .home .slider-navigation .nav-btn{
    width: 1rem;
    height: 1rem;
    border: 2px solid #40D3DC;
    border-radius: 50%;
    cursor: pointer;
    box-shadow: 0 0 2px rgba(255, 255, 255, 0.5);
    transition: 0.3 ease;
} 

 .nav .home .slider-navigation .nav-btn.active{
    background: #2696E9;
}
.nav .home .slider-navigation .nav-btn:not(:last-child){
    margin-right: 3rem;
} 
 
.nav .home .slider-navigation .nav-btn:hover{
    transform: scale(1.2);
}   */
/* .nav .home .video-slide{ */
    /* position: absolute;
    width: 100%;
    clip-path: circle(0% at 0 50%); */
    /* display: none; */
/* }   */
 /* .nav .home.video-slide .active{ */
    /* clip-path: circle(150% at 0 50%); 
    transition: 2s ease;
    transition-property: clip-path; */
    /* display: block; */
/* } */
/* .swiper-pagination{
    position: absolute;
  }
  .swiper-pagination-bullet{
    height: 7px;
    width: 26px;
    border-radius: 25px;
    background: #7d2ae8;
  }
  .swiper-button-next, .swiper-button-prev{
    opacity: 0.7;
    color: #7d2ae8;
    transition: all 0.3s ease;
  }
  .swiper-button-next:hover, .swiper-button-prev:hover{
    opacity: 1;
    color: #7d2ae8;
  } */
  /* .nav .home.btm-slides{
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
  }
  .nav .home.btm-slides span{
    height: 15px;
    width: 50px;
    border: 2px solid #104f55;
    margin: 0 3px;
    cursor: pointer;
  }
  .nav .home.sliders{
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 45px;
    cursor: pointer;
    border: 2px solid #104f55;
    background: rgba(255,255,255,0.1);
  }
  .nav .home.sliders:hover{
    background: rgba(255,255,255,0.2);
  }
  .nav .home.right{
    right: 0;
  }
  .nav .home.sliders span{
    line-height: 41px;
    font-size: 35px;
    color: #104f55;
  } */
.nav .social{
    padding: 1.4rem 0
}

.nav .social i{
    padding: 0 .2rem;
}

.nav .social i:hover{
    color: #a1c4cf;
}
/* -------x------- navbar ---------x------- */


/* ----------------- Main Content----------- */

/* --------------- Site title ---------------- */

.nav .site-title{
    background: url('../assets/background8.jpg');
    background-size: cover;
    height: 150vh;
    display: flex;
    justify-content: center;
    position: relative;
}

.nav .site-title .site-background{
    padding-top: 14rem;
    text-align: center;
    color: var(--white);
}

.nav .site-title h1, h3{
    margin: .3rem;
}

.nav .site-title .btn{
    margin: 1.8rem;
    background: var(--sky);
}

.nav .site-title .btn:hover{
    background: transparent;
    border: 1px solid var(--white);
    color: var(--white);
}

/* --------x------ Site title --------x------- */


/* --------x------ Site title --------x------- */
/* --------------- Blog Carousel ------------ */

main .blog{
    /* background: url('../assets/background6.jpg'); */
    background-repeat: no-repeat;
    background-position: center;
    height: 150vh;
    width: 100%;
     /* background-size: 65%;  */
}

main .blog .blog-post{
    padding-top: 6rem;
}

main .blog-post .blog-content{
    display: flex;
    /* sắp xếp các phần tử con của một container theo hướng dọc (theo chiều dọc). Điều này có nghĩa là các phần tử con sẽ được xếp chồng lên nhau từ trên xuống dưới thay vì xếp cạnh nhau theo chiều ngang như mặc định. */
    flex-direction: column;
    text-align: center;
    width: 80%;
    margin: 3rem 2rem;
    box-shadow: 0 15px 20px rgba(0, 0, 0, 0.2);
}

main .blog-content .blog-title{
    padding: 2rem 0;
}

main .blog-content .btn-blog{
    padding: .7rem 2rem;
    background: var(--sky);
    margin: .5rem;
}

main .blog-content span{
    display: block;
}
section .container .owl-nav{
    /* , phần tử sẽ được di chuyển đến vị trí cụ thể bằng cách sử dụng các thuộc tính "top", "bottom", "left", "right". Vị trí này được tính từ phần tử cha gần nhất mà có thuộc tính "position" không phải "static". Phần tử sẽ không ảnh hưởng đến không gian của các phần tử khác trong văn bản. */
    position: absolute;
    top: 0%;
    margin: 0 auto;
    width: 100%;
}

 .owl-prev.owl-prev .owl-nav-prev,
.owl-nav .owl-next .owl-nav-next{
    color: var(--text-gray);
    background: transparent;
    font-size: 2rem;
}

/* định nghĩa một hiệu ứng hover cho các phần tử con có lớp chứa từ "owl-" trong một carousel được thiết kế bằng Owl Carousel. 

Cụ thể, khi di chuột hover vào các phần tử đó, nền của chúng sẽ trở nên trong suốt (transparent) và màu chữ sẽ thay đổi thành màu đêm (var(--midnight)).  */

.owl-theme .owl-nav [class*='owl-']:hover{
    background: transparent;
    color: var(--midnight);
}

/* loại bỏ đường viền (outline) cho các thành phần (elements) có lớp (class) chứa từ "owl-" nằm trong phần tử có lớp "owl-nav" và thuộc giao diện (theme) "owl-theme". */
.owl-theme .owl-nav [class*='owl-']{
    outline: none;
}


/* -------x------- Blog Carousel -----x------ */

/* ---------------- Site Content ----------------*/

main .site-content{
    display: grid;
    grid-template-columns: 70% 30%;
}

main .post-content{
    width: 100%;
    
}

main .site-content .post-content > .post-image, .post-title{
    padding: 1rem 2rem;
    position: relative;
}

main .site-content .post-content > .post-image .post-info{
    background: var(--sky);
    padding: 1rem;
    position: absolute;
    bottom: 0%;
    /* "vw" viết tắt của "viewport width" (chiều rộng viewport). Một đơn vị "vw" tương ứng với một phần trăm của chiều rộng của viewport. 
    Ví dụ, giá trị "50vw" sẽ tương ứng với 50% chiều rộng của viewport, 100vw tương ứng với toàn bộ chiều rộng viewport. */
    left: 20vw;
    border-radius: 3rem;
    
}

main .site-content .post-content > .post-image > div{
    overflow: hidden;
    /* ẩn phần nội dung vượt quá kích thước của phần tử div đó. */
}

main .site-content .post-content > .post-image .img{
    width: 100%;
    transition: all 1s ease;
}

main .site-content .post-content > .post-image .img:hover{
    transform: scale(1.3);
    /* phần tử sẽ được co giãn với tỉ lệ 1.3. Nghĩa đó, phần tử sẽ được làm phình to lên 1.3 lần so với kích thước ban đầu của nó. */
}

main .site-content .post-content > .post-image .post-info span{
    margin: 0 .5rem;
}

main .post-content .post-title a{
    font-family: var(--Anton);
    font-size: 1.5rem;
}

.site-content .post-content .post-title .post-btn{
    border-radius: 0;
    padding: .7rem 1.5rem;
    background: var(--sky);
}

.site-content .pagination{
    justify-content: center;
    color: var(--text-gray);
    margin: 4rem 0;
}

.site-content .pagination a{
    padding: .6rem .9rem;
    border-radius: 2rem;
    margin: 0 .3rem;
    font-family: var(--Lexend);
}

.site-content .pagination .pages{
    background: var(--text-gray);
    color: var(--white);
}
/* .comments-container
{
    position: fixed;
    top: 2rem;
    right: 20px;
    z-index: 9999;
    background-color: #eee;
    width: 80%;
    height: 80%;
    
    display: none;
}
.comments-container.show
{
    display: inline-block;

}
.container1{
    
    width: 100%;
    height: 86%;
    overflow: hidden; 
    overflow-y: auto;

} */

/* .container1.show{
    top: 50%;
    opacity: 1;
    pointer-events: auto;
    transform:translate(-50%, -50%) scale(1);
    transition: top 0s 0s ease-in-out,
                opacity 0.2s 0s ease-in-out,
                transform 0.2s 0s ease-in-out;
  
  } */
 /* .ml-auto {
    margin-left: auto !important;
  }
  
  .col-md-8 {
    width: 50%;
  }  */
  
  /* .comment-top {
    top: 20px;
    right: 20px;
    z-index: 9999;
  }
  
  
.bdge {
    height: 21px;
    background-color: orange;
    color: #fff;
    font-size: 11px;
    padding: 8px;
    border-radius: 4px;
    line-height: 3px;
    overflow: auto;
  }
  
  .comments {
    text-decoration: underline;
    text-underline-position: under;
    cursor: pointer;
    overflow: auto;
    position: relative;
  }
  
  .dot {
    height: 7px;
    width: 7px;
    margin-top: 3px;
    background-color: #bbb;
    border-radius: 50%;
    display: inline-block;
  }
   */
  /* .hit-voting:hover {
    color: blue;
  } */
  
  /* .hit-voting {
    cursor: pointer;
  } */
   /* .comments-container .close1{
    display: flex;
    align-items: center;
    border-radius: 50%;
    justify-content: center;
    transition: all 0.3s ease-in-out;
  } 
  .comments-container .close1{
    color: #3e19d5;
    font-size: 1rem;
    background: #445f63;
    height: 2rem;
    width: 2rem;
    cursor: pointer;
  }
  .comments-container .close1:hover{
    background: #ebedf9;
  } */
/* --------------- Sharing ----------------------- */
.popup{
    background: #fff;
    padding: 3rem;
    border-radius: 1rem;
    position: fixed;
    top: 50%;
    left: 50%;
    /* transform: translate(-50%, -50%); */
    /* margin-left: 30rem; */
    max-width: 20rem;
    width: 100%;
    opacity: 0;
    pointer-events: none;
    box-shadow: 0px 10px 15px rgba(0,0,0,0.1);
    transform: translate(-50%, -50%) scale(1.2);
    transition: top 0s 0.2s ease-in-out,
                opacity 0.2s 0s ease-in-out,
                transform 0.2s 0s ease-in-out;
    /* display: flex;
    justify-content: space-between; */
    z-index: 9999;
  }
  
  .popup.show{
    top: 50%;
    opacity: 1;
    pointer-events: auto;
    transform:translate(-50%, -50%) scale(1);
    transition: top 0s 0s ease-in-out,
                opacity 0.2s 0s ease-in-out,
                transform 0.2s 0s ease-in-out;
  
  }
  
.popup :is(header, .icons, .field){
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
.popup header{
    padding-bottom: 1rem;
    border-bottom: 1px solid #ebedf9;
  }
 header span{
    font-size: 1.5rem;
    font-weight: 600;
  }
header .close, .icons a{
    display: flex;
    align-items: center;
    border-radius: 50%;
    justify-content: center;
    transition: all 0.3s ease-in-out;
  }
header .close{
    color: #878787;
    font-size: 1rem;
    background: #f2f3fb;
    height: 2rem;
    width: 2rem;
    cursor: pointer;
  }
header .close:hover{
    background: #ebedf9;
  }
.popup .content{
    margin: 1.1 0;
  }
.popup .icons{
    margin: 1rem 0 20px 0;
  }
.content p{
    font-size: 1rem;
  }
 .content .icons a{
    height: 50px;
    width: 50px;
    font-size: 20px;
    text-decoration: none;
    border: 1px solid transparent;
  }
 .icons a i{
    transition: transform 0.3s ease-in-out;
  }
 .icons a:nth-child(1){
    color: #1877F2;
    border-color: #b7d4fb;
  }
  .icons a:nth-child(1):hover{
    background: #1877F2;
  }
.icons a:nth-child(2){
    color: #46C1F6;
    border-color: #b6e7fc;
  }
.icons a:nth-child(2):hover{
    background: #46C1F6;
  }
.icons a:nth-child(3){
    color: #e1306c;
    border-color: #f5bccf;
  }
.icons a:nth-child(3):hover{
    background: #e1306c;
  }
 .icons a:nth-child(4){
    color: #25D366;
    border-color: #bef4d2;
  }
 .icons a:nth-child(4):hover{
    background: #25D366;
  }
  .icons a:nth-child(5){
    color: #0088cc;
    border-color: #b3e6ff;
  }
  .icons a:nth-child(5):hover{
    background: #0088cc;
  }
  .icons a:hover{
    color: #fff;
    border-color: transparent;
  }
   .icons a:hover i{
    transform: scale(1.2);
  }
   .content .field{
    margin: 12px 0 -5px 0;
    height: 45px;
    border-radius: 4px;
    padding: 0 5px;
    border: 1px solid #e1e1e1;
  }
   .field.active{
    border-color: #7d2ae8;
  }
   .field i{
    width: 3rem;
    font-size: 1.1rem;
    text-align: center;
  }
 .field.active i{
    color: #7d2ae8;
  }
 .field input{
    width: 100%;
    height: 100%;
    border: none;
    outline: none;
    font-size: 15px;
  }
  .field button{
    color: #fff;
    padding: 0.4rem 1.1rem;
    background: #7d2ae8;
  }
   .field button:hover{
    background: #8d39fa;
  }
  .container .post-content .btn-share{
    background-color: var(--sky);
    
    border: none;
    cursor: pointer;
  } 
  .container .post-content .btn-cmt{
    background-color: var(--sky);
    
    border: none;
    cursor: pointer;
  }
  /* ---------x----- Sharing -------------x--------- */

/* -------x-------- Site Content --------x-------*/
/* --------------- Sidebar ----------------------- */

.site-content > .sidebar .category-list{
    font-family: var(--Livvic);   
}

.site-content > .sidebar .category-list .list-items{
    background: var(--sky);
    padding: .4rem 1rem;
    margin: .8rem 0;
    border-radius: 3rem;
    width: 70%;
    display: flex;
    justify-content: space-between;
}

.site-content > .sidebar .category-list .list-items a{
    color:  black;
}

.site-content .sidebar .popular-post .post-content{
    padding: 1rem 0;
}

.site-content .sidebar .popular-post h2{
    padding-top: 8rem;
}

.site-content .sidebar .popular-post .post-info{
    padding: .4rem .1rem !important;
    bottom: 0rem !important;
    left: 1.5rem !important;
    border-radius: 0rem !important;
    background: white !important;
    /* margin-left: 9rem; */
    /* "!important" là một khai báo rõ ràng khiến thuộc tính được ưu tiên áp dụng hơn bất kỳ quy tắc nào khác, cho dù có ghi đè lên những quy tắc đã được định nghĩa trước đó */
}

.site-content .sidebar .popular-post .post-title a{
    font-size: 1rem;
}

.site-content .sidebar .newsletter{
    padding-top: 10rem;
}

.site-content .sidebar .newsletter .form-element{
    padding: .5rem 2rem;
}

.site-content .sidebar .newsletter .input-element{
    width: 80%;
    height: 1.9rem;
    padding: .3rem .5rem;
    font-family: var(--Lexend);
    font-size: 1rem;
}

.site-content .sidebar .newsletter .form-btn{
    border-radius: 0;
    padding: .8rem 32%;
    margin: 1rem 0;
    background: var(--sky);
}

.site-content .sidebar .popular-tags{
    padding: 5rem 0;
}

.site-content .sidebar .popular-tags .tags .tag{
    background: var(--sky);
    padding: .4rem 1rem;
    border-radius: 3rem;
    margin: .4rem .6rem;
}

footer.footer{
    height: 100%;
    background: var(--bg-color);
    position: relative;
}

footer.footer .container{
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    /* Thuộc tính "display: grid;" được sử dụng để thiết lập hiển thị phần tử HTML là dạng lưới.
    Thuộc tính "grid-template-columns: repeat(4, 1fr);" định nghĩa kích thước các cột trong lưới.
    Trong đoạn mã này, "repeat(4, 1fr)" có ý nghĩa là tạo ra 4 cột có chiều rộng tương đương ("1fr" là một đơn vị "fraction" hoặc phần tử, tức là cột cùng có chiều rộng). "1fr" được sử dụng để phân chia không gian còn lại trong lưới cho các cột. */
}

footer.footer .container > div{
    /* sẽ tự động mở rộng trong một container flex. Nếu có nhiều phần tử có cùng `flex-grow` khác 0, chúng sẽ chia tỷ lệ cùng nhau để lấp đầy không gian trống trong container. */
    flex-grow: 1;
    /* sử dụng không gian trống một cách linh hoạt trong container flex. Nếu các phần tử có cùng `flex-grow`, `flex-basis` được sử dụng để xác định kích thước ban đầu của phần tử trước khi phân chia không gian trống. */
    flex-basis: 0;
    padding: 3rem .9rem;
}

footer.footer .container h2{
    color: var(--white);
}
footer.footer .container p{
    color: var(--white);
}
footer.footer .newsletter .form-element{
    background: black;
    display: inline-block;
}

footer.footer .newsletter .form-element input{
    padding: .5rem .7rem;
    border: none;
    background: transparent;
    color: white;
    font-family: var(--Josefin);
    font-size: 1rem;
    width: 74%;
}

footer.footer .newsletter .form-element span{
    background: var(--sky);
    padding: .5rem .7rem;
    cursor: pointer;
}

footer.footer .instagram div > img{
    display: inline-block;
    width: 25%;
    height: 50%;
    margin: .3rem .4rem;
}

footer.footer .follow div i{
    color: var(--white);
    padding: 0 .4rem;
}

footer.footer .rights{
    justify-content: center;
    font-family: var(--Josefin);
}

footer.footer .rights h4 a{
    color: var(--white);
}

footer.footer .move-up{
    position: absolute;
    right: 6%;
    top: 50%;
}

footer.footer .move-up span{
    color: var(--midnight);
}

footer.footer .move-up span:hover{
    color: var(--white);
    cursor: pointer;
}

/* ---------x------- Footer ----------x---------- */


/* -------x------- Sidebar -----------x----------- */

/*      x       Viewport less then or equal to 1130px    x     */


/*              Viewport less then or equal to 750px            */
/* sử dụng để tạo phản ứng (responsive) cho các trang web trên các thiết bị có màn hình có độ rộng tối đa là 750px */
@media only screen and (max-width: 750px){
    .nav .nav-menu, .nav .nav-items{
        flex-direction: column;
        /* Thuộc tính này được sử dụng để thiết lập hướng linh hoạt (flex-direction) của các phần tử con trong "nav-menu" và "nav-items" thành dạng dọc (column), tức là các phần tử con sẽ được xếp theo chiều dọc thay vì ngang. */

    }

    .nav .toggle-collapse{
        display: initial;
        /* hiển thị ban đầu (initial) khi đối tượng responsive này được kích hoạt */
    }

    main .site-content{
        grid-template-columns: 100%; 
        /* sẽ sử dụng một cột (100%) của lưới (grid-template-columns: 100%) thay vì sử dụng nhiều cột như bình thường. */
    } 

    footer.footer .container{
        grid-template-columns: repeat(1, 1fr);
        /* Phần tử có class "container" trong phần chân trang (footer) sẽ sử dụng một cột (1fr) của lưới (grid-template-columns: repeat(1, 1fr)). */
    }
    /* .nav .home .video-slide{
        grid-template-columns: 100%; 
    }
    .nav.home{
        height: 200vh;
    } */
}

/* định nghĩa một số quy tắc cho các phần tử khi màn hình có độ rộng không quá 520px. */
@media only screen and (max-width: 520px){
    main .blog{
        height: 100vh;
        /* chiều cao là 125vh (khối lượng không gian tương đương với 125% chiều cao của viewport). */
    }
    .nav .home .content  h1{
        font-size: 3rem;
        line-height: 60px;
    }

    .site-content .post-content > .post-image .post-info{
        display: none;
        /* không được hiển thị */
    }

    footer.footer .container > div{
        padding:  1rem .9rem !important;
    }

    footer .rights{
        padding: 0 1.4rem;
        text-align: center;
    }

    nav .toggle-collapse{
        width: 80% !important;
    }
    /* nav {
        height: 200vh;
    } */

}
